version: v2beta1
name: keycloak-auth-plugin

pipelines:
  build:
    run: |-
      build_images --all
  # You can run this pipeline via `devspace deploy` (or `devspace run-pipeline deploy`)
  deploy:
    run: |-
      run_dependencies --all                            # 1. Deploy any projects this project needs (see "dependencies")
      ensure_pull_secrets --all                         # 2. Ensure pull secrets
      run_pipelines deploy-ordered
      # build_images --all -t $(git describe --always)    # 3. Build, tag (git commit hash) and push all images (see "images")
      # create_deployments --all                          # 4. Deploy Helm charts and manifests specfied as "deployments"
  # This is the pipeline for the main command: `devspace dev` (or `devspace run-pipeline dev`)
  dev:
    run: |-
      run_dependencies --all       # 1. Deploy any projects this project needs (see "dependencies")
      ensure_pull_secrets --all    # 2. Ensure pull secrets
      create_deployments --all     # 3. Deploy Helm charts and manifests specfied as "deployments"
      start_dev keycloak-auth-plugin                # 4. Start dev mode "app" (see "dev" section)
images:
  keycloak-auth-plugin:
    image: cmusei/keycloak-auth-plugin
    tags:
      - $(git rev-parse --abbrev-ref HEAD)
    dockerfile: ./Dockerfile
    context: .
    buildKit: {}
      
dependencies:
  crucible-common:
    git: https://github.com/sei-noconnor/crucible-common-devspace.git
    branch: main
    overwriteVars: true
  #### Local Dependency dev ###
  # crucible-common:
  #   path: ../crucible-devspace
  #   overwriteVars: true
 
dev:
  keycloak-auth-plugin:
    imageSelector: docker.io/bitnami/keycloak:21.0.2-debian-11-r0
    container: keycloak
    command:
    - "bash"
    - "-c"
    - "sleep 10 && /opt/bitnami/scripts/keycloak/setup.sh && /opt/bitnami/scripts/keycloak/run.sh"
    env:
    - name: BITNAMI_DEBUG
      value: "true"
    - name: KEYCLOAK_EXTRA_ARGS
      value: --spi-theme-welcome-theme=p1-sso-live-dev --spi-theme-static-max-age=-1 --spi-theme-cache-themes=false --spi-theme-cache-templates=false --spi-truststore-file-file=/opt/bitnami/keycloak/spi-certs/truststore.jks --spi-truststore-file-password=password --spi-truststore-file-hostname-verification-policy=ANY --spi-truststore-file-type=jks --spi-x509cert-lookup-provider=nginx --spi-x509cert-lookup-nginx-ssl-client-cert=ssl-client-cert --spi-x509cert-lookup-nginx-trust-proxy-verification=false --import-realm
    - name: KEYCLOAK_PRODUCTION
      value: "true"
    - name: DEBUG_PORT
      value: "*:8787"
    - name: "KEYCLOAK_DATABASE_VENDOR"
      value: "dev-file"
    
    sync:
      - path: "${DEVSPACE_WORKING_DIR}/development/theme-live-dev/theme/p1-sso-live-dev:/opt/bitnami/keycloak/themes/p1-sso-live-dev"
        waitInitialSync: true
        disableDownload: true
      - path: "${DEVSPACE_WORKING_DIR}/build/libs/p1-keycloak-plugin-3.2.0.jar:/opt/bitnami/keycloak/providers/p1-keycloak-plugin-3.2.0.jar"
        disableDownload: true
        file: true
        printLogs: true
        # onUpload:
        #   exec:
        #     - command: /opt/bitnami/scripts/keycloak/setup.sh 
        #     - command: /opt/bitnami/scripts/keycloak/run.sh

    patches: 
    - op: remove
      path: spec.initContainers.name=plugin
    - op: remove
      path: spec.containers.name=keycloak.volumeMounts.name=plugin
    - op: remove
      path: spec.containers.name=keycloak.env.name=KC_DB
    - op: remove
      path: spec.containers.name=keycloak.env.name=KC_DB_USERNAME
    - op: remove
      path: spec.containers.name=keycloak.env.name=KC_DB_PASSWORD
    - op: remove
      path: spec.containers.name=keycloak.env.name=KC_DB_URL_DATABASE
    - op: remove
      path: spec.containers.name=keycloak.env.name=KC_DB__URL_PORT
    - op: remove
      path: spec.containers.name=keycloak.env.name=KC_DB_URL_HOST
    - op: remove
      path: spec.containers.name=keycloak.env.name=KEYCLOAK_DATABASE_HOST
    - op: remove
      path: spec.containers.name=keycloak.env.name=KEYCLOAK_DATABASE_PORT
    - op: remove
      path: spec.containers.name=keycloak.env.name=KEYCLOAK_DATABASE_USER
    - op: remove
      path: spec.containers.name=keycloak.env.name=KEYCLOAK_DATABASE_PASSWORD

localRegistry:
  enabled: true
  name: registry
  namespace: default
  localbuild: false
  image: registry:2.8.1
  persistence:
    enabled: true
    size: 10Gi

vars:
  DEVSPACE_WORKING_DIR: $(echo "$PWD")
  DOMAIN: "crucible.dev"
  ADMIN_PASS: "P@ssw0rd1!"
  POSTGRES_SERVER: postgres-postgresql.default.svc.cluster.local
  POSTGRES_USER: postgres
  POSTGRES_PASS: postgres
  INGRESS_NAMESPACE: ingress-nginx
  OAUTH_PROVIDER: keycloak
  OAUTH_AUTHORITY_URL: realms/crucible
    

commands:
  prep: |
    devspace run crucible-common.prep
  bootstrap: |
    ln -sf $PWD/p1-keycloak-plugin/src/main/resources/theme/crucible $PWD/development/theme-live-dev/theme/p1-sso-live-dev
    devspace run crucible-common.bootstrap
  clean: |
    rm -rf $PWD/development/theme-live-dev/theme/p1-sso-live-dev
    devspace run crucible-common.clean
  build-plugin: |
    docker run -it --rm -v $(pwd):/app gradle:7.4.2-jdk11 bash -c 'cd /app && ./gradlew clean --build-cache assemble'
